% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Power.R
\name{gfxTimsort}
\alias{gfxTimsort}
\title{gfxTimsort}
\usage{
gfxTimsort(
  x,
  situation = c("insitu", "exsitu"),
  method = c("pointer", "index")
)
}
\arguments{
\item{x}{a double vector to be sorted}

\item{situation}{"insitu" will only allocate buffer memory and use the
existing RAM for sorting, "exsitu" will allocate completely fresh RAM for
data abnd buffer}

\item{method}{an attempt to classify the implementation,  "index" means the
implementation rather indexes into arrays, "pointer" rather uses pointer
arithmetic}
}
\value{
a zero length logical vector with an attribute
  \code{\link[greeNsort]{perf}}, a named numeric vector with three elements
  \item{Memory \code{\link[greeNsort]{size}}}{the maximum memory used for
  execution (the size of data and buffer relative to the size of the data
  only)} \item{Runtime \code{\link[greeNsort]{secs}}}{the execution time
  measured in seconds} \item{Sustainability
  \code{\link[greeNsort]{sizesecs}}}{the integral of memory size over
  execution time where size is measured as number of elements}
}
\description{
Timsort in Gelling, Nebel, Smith & Wild 2022 \url{https://github.com/sebawild/powersort}
}
\details{
Sebastian Wild took the implementation from \url{https://github.com/timsort/cpp-TimSort}

See \code{\link[greeNsort]{algodb}} for the complete table of algorithms.
}
\note{
The Code under the BSD 2-Clause "Simplified" License is taken from
  \url{https://github.com/SaschaWitt/ips4o}
}
\examples{
n <- 2^10
x <- runif(n)
Pdqsort(x)
x <- as.double(1:n)
Pdqsort(x)
}
\seealso{
\code{\link[greeNsort]{Omitsort}}
}
