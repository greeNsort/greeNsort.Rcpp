% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Power.R
\name{Powersort}
\alias{Powersort}
\title{Powersort}
\usage{
Powersort(x, situation = c("insitu", "exsitu"), method = c("pointer", "index"))
}
\arguments{
\item{x}{a double vector to be sorted}

\item{situation}{"insitu" will only allocate buffer memory and use the
existing RAM for sorting, "exsitu" will allocate completely fresh RAM for
data abnd buffer}

\item{method}{an attempt to classify the implementation,  "index" means the
implementation rather indexes into arrays, "pointer" rather uses pointer
arithmetic}
}
\value{
a zero length logical vector with an attribute
  \code{\link[greeNsort]{perf}}, a named numeric vector with three elements
  \item{Memory \code{\link[greeNsort]{size}}}{the maximum memory used for
  execution (the size of data and buffer relative to the size of the data
  only)} \item{Runtime \code{\link[greeNsort]{secs}}}{the execution time
  measured in seconds} \item{Sustainability
  \code{\link[greeNsort]{sizesecs}}}{the integral of memory size over
  execution time where size is measured as number of elements}
}
\description{
Powersort by Munro & Wild 2018 (COPY_SMALLER) from \url{https://github.com/sebawild/powersort}
}
\details{
"Powersort is much more similar to Timsort than to standard mergesort: it
proceeds in one pass from left to right over the input, and detects the next
run in the input. For each new run, we may decide to do some merges now, or
we delay them and keep the runs on a to-do-stack.

While Timsort uses a rather complicated set of rules to decide what and when
to merge, powersort assigns each adjacent pair of runs an easy to compute
integer, its “power” and upon arrival of a new pair, simply executes all
postponed merges of higher power. Like peeksort, powersort provably adapts
optimally to existing runs (up to linear terms), something Timsort provably
does not."

See \code{\link[greeNsort]{algodb}} for the complete table of algorithms.
}
\note{
The Code under the BSD 2-Clause "Simplified" License is taken from
  \url{https://github.com/SaschaWitt/ips4o}
}
\examples{
n <- 2^10
x <- runif(n)
Pdqsort(x)
x <- as.double(1:n)
Pdqsort(x)
}
\seealso{
\code{\link[greeNsort]{Omitsort}}
}
