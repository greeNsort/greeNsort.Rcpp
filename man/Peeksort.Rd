% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Power.R
\name{Peeksort}
\alias{Peeksort}
\title{Peeksort}
\usage{
Peeksort(x, situation = c("insitu", "exsitu"), method = c("pointer", "index"))
}
\arguments{
\item{x}{a double vector to be sorted}

\item{situation}{"insitu" will only allocate buffer memory and use the
existing RAM for sorting, "exsitu" will allocate completely fresh RAM for
data abnd buffer}

\item{method}{an attempt to classify the implementation,  "index" means the
implementation rather indexes into arrays, "pointer" rather uses pointer
arithmetic}
}
\value{
a zero length logical vector with an attribute
  \code{\link[greeNsort]{perf}}, a named numeric vector with three elements
  \item{Memory \code{\link[greeNsort]{size}}}{the maximum memory used for
  execution (the size of data and buffer relative to the size of the data
  only)} \item{Runtime \code{\link[greeNsort]{secs}}}{the execution time
  measured in seconds} \item{Sustainability
  \code{\link[greeNsort]{sizesecs}}}{the integral of memory size over
  execution time where size is measured as number of elements}
}
\description{
Peeksort by Munro & Wild 2018 (COPY_SMALLER) from \url{https://github.com/sebawild/powersort}
}
\details{
"We simulate cutting the probability in half by finding the run
boundary closest to the middle of the array. We can do that by simply
scanning left and right from the middle, until we find the first out-of-order
pair. With two additional indices passed down to the recursive calls, we can
avoid every scanning the same run twice in this “peeking-at-the-middle”
process.

The awesome property of peeksort is that we do not have to detect the runs up
front; we can delay this step until we really need to know a boundary. In
case the input does not contain long runs, we do not much more work than
standard top-down mergesort."

See \code{\link[greeNsort]{algodb}} for the complete table of algorithms.
}
\note{
The Code under the BSD 2-Clause "Simplified" License is taken from
  \url{https://github.com/SaschaWitt/ips4o}
}
\examples{
n <- 2^10
x <- runif(n)
Pdqsort(x)
x <- as.double(1:n)
Pdqsort(x)
}
\seealso{
\code{\link[greeNsort]{Omitsort}}
}
